{"paragraphs":[{"text":"%md\n\n# Data Engineer Notebook\n\n## Description\nThis set of scripts read data from raw csv data and saves it to hive managed tables.\n\n## Execution Steps\n\n* Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table\n* Step 2: Read raw employee data and save to Hive managed table\n* Step 3: Read covid data and save to Hive managed table\n* Step 4: Read geocode data and save to Hive managed table\n* Step 5: Create hive materialized view for number of employees per location","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Data Engineer Notebook</h1>\n<h2>Description</h2>\n<p>This set of scripts read data from raw csv data and saves it to hive managed tables.</p>\n<h2>Execution Steps</h2>\n<ul>\n<li>Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table</li>\n<li>Step 2: Read raw employee data and save to Hive managed table</li>\n<li>Step 3: Read covid data and save to Hive managed table</li>\n<li>Step 4: Read geocode data and save to Hive managed table</li>\n<li>Step 5: Create hive materialized view for number of employees per location</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1602356906357_253056427","id":"20200504-145049_208312522","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:311"},{"text":"%md\n### Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table</h3>\n"}]},"apps":[],"jobName":"paragraph_1602356906357_1081130716","id":"20200504-145710_1004098376","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:312"},{"text":"// Read raw location data\nval BUCKET = \"com-cdp-bucket\"\nval locationDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://\"+BUCKET+\"/raw/locations.csv\")\nlocationDf.printSchema()","user":"ledel","dateUpdated":"2020-10-10T19:30:16+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906358_-1965184153","id":"20200504-144118_1021814178","dateCreated":"2020-10-10T19:08:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:313","dateFinished":"2020-10-10T19:29:48+0000","dateStarted":"2020-10-10T19:29:46+0000"},{"text":"// Make sure that all locations have adresses\nlocationDf.createOrReplaceTempView(\"location\")\n\nval allLocations = spark.sql(\"SELECT count(*) FROM location\")\n\nallLocations.show()","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906358_-456369277","id":"20200504-144542_365748041","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:314"},{"text":"val allLocationsWithAddress = spark.sql(\"SELECT count(*) FROM location where ADDRESS is not null\")\n\nallLocationsWithAddress.show()","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906358_-1064003259","id":"20200504-145824_988488816","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:315"},{"text":"// Save to hive managed table\n\nimport com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\nhive.showDatabases().show()","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906358_1820319185","id":"20200504-150106_1157423807","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:316"},{"text":"hive.executeUpdate(\"CREATE DATABASE worldwidebank\");\nhive.setDatabase(\"worldwidebank\");\nlocationDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"locations\").save()","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906358_1662189019","id":"20200506-003309_39288531","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:317"},{"text":"val ds = hive.sql(\"select * from locations limit 10\")\nds.show()","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906359_2029268670","id":"20200506-004922_435064089","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:318"},{"text":"%md\n### Step 2: Read raw employee data and save to Hive managed table","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 2: Read raw employee data and save to Hive managed table</h3>\n"}]},"apps":[],"jobName":"paragraph_1602356906359_1435409563","id":"20200506-005536_624379466","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:319"},{"text":"val employeeDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://\"+BUCKET+\"/raw/employee_data.csv\")","user":"ledel","dateUpdated":"2020-10-10T19:30:33+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906359_1515743556","id":"20200506-113303_1528319006","dateCreated":"2020-10-10T19:08:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:320","dateFinished":"2020-10-10T19:30:37+0000","dateStarted":"2020-10-10T19:30:34+0000"},{"text":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\n\nhive.setDatabase(\"worldwidebank\");\nemployeeDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"employees\").save()","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906359_10844699","id":"20200506-113544_595223560","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:321"},{"text":"%md\n### Step 3: Read covid data and save to Hive managed table","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 3: Read covid data and save to Hive managed table</h3>\n"}]},"apps":[],"jobName":"paragraph_1602356906359_-1010764117","id":"20200506-113634_1832908608","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:322"},{"text":"val covidDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://\"+BUCKET+\"/raw/covid_cases_04292020.csv\")\n\nhive.setDatabase(\"worldwidebank\");\ncovidDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"covid_cases\").save()","user":"ledel","dateUpdated":"2020-10-10T19:33:54+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906359_-789416072","id":"20200506-113703_1246022963","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:323"},{"text":"%md\n### Step 4: Read geocode data and save to Hive managed table","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 4: Read geocode data and save to Hive managed table</h3>\n"}]},"apps":[],"jobName":"paragraph_1602356906360_1699985820","id":"20200506-201225_1957883239","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:325"},{"text":"// Read raw location data\nval geoDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://\"+BUCKET+\"/raw/Geocodes_USA_with_Counties.csv\")\n//geoDf.printSchema()\n\nhive.setDatabase(\"worldwidebank\");\ngeoDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"us_geocodes_by_county\").save()\n","user":"ledel","dateUpdated":"2020-10-10T19:33:02+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906360_-520417604","id":"20200506-113858_1079907016","dateCreated":"2020-10-10T19:08:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:326","dateFinished":"2020-10-10T19:32:21+0000","dateStarted":"2020-10-10T19:32:19+0000"},{"text":"%md\n### Step 5: Create hive materialized view for number of employees per location","user":"ledel","dateUpdated":"2020-10-10T19:08:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 5: Create hive materialized view for number of employees per location</h3>\n"}]},"apps":[],"jobName":"paragraph_1602356906360_2081510785","id":"20200508-125708_1774050238","dateCreated":"2020-10-10T19:08:26+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:328"},{"text":"hive.setDatabase(\"worldwidebank\");\n\nhive.executeUpdate(\"CREATE MATERIALIZED VIEW worldwidebank.employees_per_state as select locations.stname, count(*) as num_employees from employees, locations where employees.location=locations.location_id GROUP BY locations.stname\")\nhive.executeUpdate(\"CREATE MATERIALIZED VIEW worldwidebank.employees_and_cases_per_state as (select locations.stname as state, employees_per_state.num_employees, sum(covid_cases.confirmed) as confirmed_cases from locations, employees_per_state,  covid_cases where employees_per_state.STNAME = locations.STNAME  and covid_cases.province_state = locations.stname  and employees_per_state.STNAME = covid_cases.province_state group by locations.stname, employees_per_state.num_employees)\")\n","user":"ledel","dateUpdated":"2020-10-10T19:31:35+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602356906361_-1409794291","id":"20200506-201052_606234623","dateCreated":"2020-10-10T19:08:26+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:329","dateFinished":"2020-10-10T19:31:12+0000","dateStarted":"2020-10-10T19:31:11+0000"}],"name":"test","id":"2FNM2T1R8","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
